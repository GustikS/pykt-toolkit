wandb: Currently logged in as: shyann (use `wandb login --relogin` to force relogin)
device:cuda
Namespace(bz=64, fusion_type='late_fusion', save_dir='saved_model/assist2009_deepbkt_dina_saved_model_3407_0_0.2_512_256_256_8_4_0.0001_0.5_0.05_0.2_0_0', use_wandb=1)
wandb: wandb version 0.13.2 is available!  To upgrade, please run:
wandb:  $ pip install wandb --upgrade
wandb: Tracking run with wandb version 0.12.9
wandb: Syncing run lyric-elevator-272
wandb: ‚≠êÔ∏è View project at https://wandb.ai/shyann/wandb_predict
wandb: üöÄ View run at https://wandb.ai/shyann/wandb_predict/runs/xzxd6ndi
wandb: Run data is saved locally in /data/huangshuyan/shyann_dev/pykt-toolkit/examples/wandb/run-20220908_173250-xzxd6ndi
wandb: Run `wandb offline` to turn off syncing.

model_name is deepbkt
Read data from processed file: ../data/assist2009/test_sequences.csv_-1.pkl
file path: ../data/assist2009/test_sequences.csv, qlen: 904, clen: 904, rlen: 904
Read data from processed file: ../data/assist2009/test_window_sequences.csv_-1.pkl
file path: ../data/assist2009/test_window_sequences.csv, qlen: 20362, clen: 20362, rlen: 20362
Read data from processed file: ../data/assist2009/test_question_sequences.csv_-1_qtest.pkl
file path: ../data/assist2009/test_question_sequences.csv, qlen: 18292, clen: 18292, rlen: 18292
Read data from processed file: ../data/assist2009/test_question_window_sequences.csv_-1_qtest.pkl
file path: ../data/assist2009/test_question_window_sequences.csv, qlen: 30610, clen: 30610, rlen: 30610
has test_question_file!
Start predicting model: deepbkt, embtype: dina, save_dir: saved_model/assist2009_deepbkt_dina_saved_model_3407_0_0.2_512_256_256_8_4_0.0001_0.5_0.05_0.2_0_0, dataset_name: assist2009
model_config: {'dropout': 0.2, 'd_model': 512, 'd_ff': 256, 'final_fc_dim': 256, 'num_attn_heads': 8, 'n_blocks': 4, 'lambda_r': 0.5, 'sigmoida': 0.05, 'sigmoidb': 0.2}
data_config: {'dpath': '../data/assist2009', 'num_q': 17737, 'num_c': 123, 'input_type': ['questions', 'concepts'], 'max_concepts': 4, 'min_seq_len': 3, 'maxlen': 200, 'emb_path': '', 'train_valid_original_file': 'train_valid.csv', 'train_valid_file': 'train_valid_sequences.csv', 'folds': [0, 1, 2, 3, 4], 'test_original_file': 'test.csv', 'test_file': 'test_sequences.csv', 'test_window_file': 'test_window_sequences.csv', 'test_question_file': 'test_question_sequences.csv', 'test_question_window_file': 'test_question_window_sequences.csv', 'train_valid_original_file_quelevel': 'train_valid_quelevel.csv', 'train_valid_file_quelevel': 'train_valid_sequences_quelevel.csv', 'test_file_quelevel': 'test_sequences_quelevel.csv', 'test_window_file_quelevel': 'test_window_sequences_quelevel.csv'}
kc_slipping: torch.Size([64, 200])
kc_guess: torch.Size([64, 200])
kc_slipping: torch.Size([64, 200])
kc_guess: torch.Size([64, 200])
kc_slipping: torch.Size([64, 200])
kc_guess: torch.Size([64, 200])
kc_slipping: torch.Size([64, 200])
kc_guess: torch.Size([64, 200])
kc_slipping: torch.Size([64, 200])
kc_guess: torch.Size([64, 200])
kc_slipping: torch.Size([64, 200])
kc_guess: torch.Size([64, 200])
kc_slipping: torch.Size([64, 200])
kc_guess: torch.Size([64, 200])
kc_slipping: torch.Size([64, 200])
kc_guess: torch.Size([64, 200])
kc_slipping: torch.Size([64, 200])
kc_guess: torch.Size([64, 200])
kc_slipping: torch.Size([64, 200])
kc_guess: torch.Size([64, 200])
kc_slipping: torch.Size([64, 200])
kc_guess: torch.Size([64, 200])
kc_slipping: torch.Size([64, 200])
kc_guess: torch.Size([64, 200])
kc_slipping: torch.Size([64, 200])
kc_guess: torch.Size([64, 200])
kc_slipping: torch.Size([64, 200])
kc_guess: torch.Size([64, 200])
kc_slipping: torch.Size([8, 200])
kc_guess: torch.Size([8, 200])
ts.shape: (61904,), ps.shape: (61904,)
testauc: 0.826160322778045, testacc: 0.7726479710519514
kc_slipping: torch.Size([64, 200])
kc_guess: torch.Size([64, 200])
kc_slipping: torch.Size([64, 200])
kc_guess: torch.Size([64, 200])
kc_slipping: torch.Size([64, 200])
kc_guess: torch.Size([64, 200])
kc_slipping: torch.Size([64, 200])
kc_guess: torch.Size([64, 200])
kc_slipping: torch.Size([64, 200])
kc_guess: torch.Size([64, 200])
kc_slipping: torch.Size([64, 200])
kc_guess: torch.Size([64, 200])
kc_slipping: torch.Size([64, 200])
kc_guess: torch.Size([64, 200])
kc_slipping: torch.Size([64, 200])
kc_guess: torch.Size([64, 200])
kc_slipping: torch.Size([64, 200])
kc_guess: torch.Size([64, 200])
kc_slipping: torch.Size([64, 200])
kc_guess: torch.Size([64, 200])
kc_slipping: torch.Size([64, 200])
kc_guess: torch.Size([64, 200])
kc_slipping: torch.Size([64, 200])
kc_guess: torch.Size([64, 200])
kc_slipping: torch.Size([64, 200])
kc_guess: torch.Size([64, 200])
kc_slipping: torch.Size([64, 200])
kc_guess: torch.Size([64, 200])
kc_slipping: torch.Size([64, 200])
kc_guess: torch.Size([64, 200])
kc_slipping: torch.Size([64, 200])
kc_guess: torch.Size([64, 200])
kc_slipping: torch.Size([64, 200])
kc_guess: torch.Size([64, 200])
kc_slipping: torch.Size([64, 200])
kc_guess: torch.Size([64, 200])
kc_slipping: torch.Size([64, 200])
kc_guess: torch.Size([64, 200])
kc_slipping: torch.Size([64, 200])
kc_guess: torch.Size([64, 200])
kc_slipping: torch.Size([64, 200])
kc_guess: torch.Size([64, 200])
kc_slipping: torch.Size([64, 200])
kc_guess: torch.Size([64, 200])
kc_slipping: torch.Size([64, 200])
kc_guess: torch.Size([64, 200])
kc_slipping: torch.Size([64, 200])
kc_guess: torch.Size([64, 200])
kc_slipping: torch.Size([64, 200])
kc_guess: torch.Size([64, 200])
kc_slipping: torch.Size([64, 200])
kc_guess: torch.Size([64, 200])
kc_slipping: torch.Size([64, 200])
kc_guess: torch.Size([64, 200])
kc_slipping: torch.Size([64, 200])
kc_guess: torch.Size([64, 200])
kc_slipping: torch.Size([64, 200])
kc_guess: torch.Size([64, 200])
kc_slipping: torch.Size([64, 200])
kc_guess: torch.Size([64, 200])
kc_slipping: torch.Size([64, 200])
kc_guess: torch.Size([64, 200])
kc_slipping: torch.Size([64, 200])
kc_guess: torch.Size([64, 200])
kc_slipping: torch.Size([64, 200])
kc_guess: torch.Size([64, 200])
kc_slipping: torch.Size([64, 200])
kc_guess: torch.Size([64, 200])
kc_slipping: torch.Size([64, 200])
kc_guess: torch.Size([64, 200])
kc_slipping: torch.Size([64, 200])
kc_guess: torch.Size([64, 200])
kc_slipping: torch.Size([64, 200])
kc_guess: torch.Size([64, 200])
kc_slipping: torch.Size([64, 200])
kc_guess: torch.Size([64, 200])
kc_slipping: torch.Size([64, 200])
kc_guess: torch.Size([64, 200])
kc_slipping: torch.Size([64, 200])
kc_guess: torch.Size([64, 200])
kc_slipping: torch.Size([64, 200])
kc_guess: torch.Size([64, 200])
kc_slipping: torch.Size([64, 200])
kc_guess: torch.Size([64, 200])
kc_slipping: torch.Size([64, 200])
kc_guess: torch.Size([64, 200])
kc_slipping: torch.Size([64, 200])
kc_guess: torch.Size([64, 200])
kc_slipping: torch.Size([64, 200])
kc_guess: torch.Size([64, 200])
kc_slipping: torch.Size([64, 200])
kc_guess: torch.Size([64, 200])
kc_slipping: torch.Size([64, 200])
kc_guess: torch.Size([64, 200])
kc_slipping: torch.Size([64, 200])
kc_guess: torch.Size([64, 200])
kc_slipping: torch.Size([64, 200])
kc_guess: torch.Size([64, 200])
kc_slipping: torch.Size([64, 200])
kc_guess: torch.Size([64, 200])
kc_slipping: torch.Size([64, 200])
kc_guess: torch.Size([64, 200])
kc_slipping: torch.Size([64, 200])
kc_guess: torch.Size([64, 200])
kc_slipping: torch.Size([64, 200])
kc_guess: torch.Size([64, 200])
kc_slipping: torch.Size([64, 200])
kc_guess: torch.Size([64, 200])
kc_slipping: torch.Size([64, 200])
kc_guess: torch.Size([64, 200])
kc_slipping: torch.Size([64, 200])
kc_guess: torch.Size([64, 200])
kc_slipping: torch.Size([64, 200])
kc_guess: torch.Size([64, 200])
kc_slipping: torch.Size([64, 200])
kc_guess: torch.Size([64, 200])
kc_slipping: torch.Size([64, 200])
kc_guess: torch.Size([64, 200])
kc_slipping: torch.Size([64, 200])
kc_guess: torch.Size([64, 200])
kc_slipping: torch.Size([64, 200])
kc_guess: torch.Size([64, 200])
kc_slipping: torch.Size([64, 200])
kc_guess: torch.Size([64, 200])
kc_slipping: torch.Size([64, 200])
kc_guess: torch.Size([64, 200])
kc_slipping: torch.Size([64, 200])
kc_guess: torch.Size([64, 200])
kc_slipping: torch.Size([64, 200])
kc_guess: torch.Size([64, 200])
kc_slipping: torch.Size([64, 200])
kc_guess: torch.Size([64, 200])
kc_slipping: torch.Size([64, 200])
kc_guess: torch.Size([64, 200])
kc_slipping: torch.Size([64, 200])
kc_guess: torch.Size([64, 200])
kc_slipping: torch.Size([64, 200])
kc_guess: torch.Size([64, 200])
kc_slipping: torch.Size([64, 200])
kc_guess: torch.Size([64, 200])
kc_slipping: torch.Size([64, 200])
kc_guess: torch.Size([64, 200])
kc_slipping: torch.Size([64, 200])
kc_guess: torch.Size([64, 200])
kc_slipping: torch.Size([64, 200])
kc_guess: torch.Size([64, 200])
kc_slipping: torch.Size([64, 200])
kc_guess: torch.Size([64, 200])
kc_slipping: torch.Size([64, 200])
kc_guess: torch.Size([64, 200])
kc_slipping: torch.Size([64, 200])
kc_guess: torch.Size([64, 200])
kc_slipping: torch.Size([64, 200])
kc_guess: torch.Size([64, 200])
kc_slipping: torch.Size([64, 200])
kc_guess: torch.Size([64, 200])
kc_slipping: torch.Size([64, 200])
kc_guess: torch.Size([64, 200])
kc_slipping: torch.Size([64, 200])
kc_guess: torch.Size([64, 200])
kc_slipping: torch.Size([64, 200])
kc_guess: torch.Size([64, 200])
kc_slipping: torch.Size([64, 200])
kc_guess: torch.Size([64, 200])
kc_slipping: torch.Size([64, 200])
kc_guess: torch.Size([64, 200])
kc_slipping: torch.Size([64, 200])
kc_guess: torch.Size([64, 200])
kc_slipping: torch.Size([64, 200])
kc_guess: torch.Size([64, 200])
kc_slipping: torch.Size([64, 200])
kc_guess: torch.Size([64, 200])
kc_slipping: torch.Size([64, 200])
kc_guess: torch.Size([64, 200])
kc_slipping: torch.Size([64, 200])
kc_guess: torch.Size([64, 200])
kc_slipping: torch.Size([64, 200])
kc_guess: torch.Size([64, 200])
kc_slipping: torch.Size([64, 200])
kc_guess: torch.Size([64, 200])
kc_slipping: torch.Size([64, 200])
kc_guess: torch.Size([64, 200])
kc_slipping: torch.Size([64, 200])
kc_guess: torch.Size([64, 200])
kc_slipping: torch.Size([64, 200])
kc_guess: torch.Size([64, 200])
kc_slipping: torch.Size([64, 200])
kc_guess: torch.Size([64, 200])
kc_slipping: torch.Size([64, 200])
kc_guess: torch.Size([64, 200])
kc_slipping: torch.Size([64, 200])
kc_guess: torch.Size([64, 200])
kc_slipping: torch.Size([64, 200])
kc_guess: torch.Size([64, 200])
kc_slipping: torch.Size([64, 200])
kc_guess: torch.Size([64, 200])
kc_slipping: torch.Size([64, 200])
kc_guess: torch.Size([64, 200])
kc_slipping: torch.Size([64, 200])
kc_guess: torch.Size([64, 200])
kc_slipping: torch.Size([64, 200])
kc_guess: torch.Size([64, 200])
kc_slipping: torch.Size([64, 200])
kc_guess: torch.Size([64, 200])
kc_slipping: torch.Size([64, 200])
kc_guess: torch.Size([64, 200])
kc_slipping: torch.Size([64, 200])
kc_guess: torch.Size([64, 200])
kc_slipping: torch.Size([64, 200])
kc_guess: torch.Size([64, 200])
kc_slipping: torch.Size([64, 200])
kc_guess: torch.Size([64, 200])
kc_slipping: torch.Size([64, 200])
kc_guess: torch.Size([64, 200])
kc_slipping: torch.Size([64, 200])
kc_guess: torch.Size([64, 200])
kc_slipping: torch.Size([64, 200])
kc_guess: torch.Size([64, 200])
kc_slipping: torch.Size([64, 200])
kc_guess: torch.Size([64, 200])
kc_slipping: torch.Size([64, 200])
kc_guess: torch.Size([64, 200])
kc_slipping: torch.Size([64, 200])
kc_guess: torch.Size([64, 200])
kc_slipping: torch.Size([64, 200])
kc_guess: torch.Size([64, 200])
kc_slipping: torch.Size([64, 200])
kc_guess: torch.Size([64, 200])
kc_slipping: torch.Size([64, 200])
kc_guess: torch.Size([64, 200])
kc_slipping: torch.Size([64, 200])
kc_guess: torch.Size([64, 200])
kc_slipping: torch.Size([64, 200])
kc_guess: torch.Size([64, 200])
kc_slipping: torch.Size([64, 200])
kc_guess: torch.Size([64, 200])
kc_slipping: torch.Size([64, 200])
kc_guess: torch.Size([64, 200])
kc_slipping: torch.Size([64, 200])
kc_guess: torch.Size([64, 200])
kc_slipping: torch.Size([64, 200])
kc_guess: torch.Size([64, 200])
kc_slipping: torch.Size([64, 200])
kc_guess: torch.Size([64, 200])
kc_slipping: torch.Size([64, 200])
kc_guess: torch.Size([64, 200])
kc_slipping: torch.Size([64, 200])
kc_guess: torch.Size([64, 200])
kc_slipping: torch.Size([64, 200])
kc_guess: torch.Size([64, 200])
kc_slipping: torch.Size([64, 200])
kc_guess: torch.Size([64, 200])
kc_slipping: torch.Size([64, 200])
kc_guess: torch.Size([64, 200])
kc_slipping: torch.Size([64, 200])
kc_guess: torch.Size([64, 200])
kc_slipping: torch.Size([64, 200])
kc_guess: torch.Size([64, 200])
kc_slipping: torch.Size([64, 200])
kc_guess: torch.Size([64, 200])
kc_slipping: torch.Size([64, 200])
kc_guess: torch.Size([64, 200])
kc_slipping: torch.Size([64, 200])
kc_guess: torch.Size([64, 200])
kc_slipping: torch.Size([64, 200])
kc_guess: torch.Size([64, 200])
kc_slipping: torch.Size([64, 200])
kc_guess: torch.Size([64, 200])
kc_slipping: torch.Size([64, 200])
kc_guess: torch.Size([64, 200])
kc_slipping: torch.Size([64, 200])
kc_guess: torch.Size([64, 200])
kc_slipping: torch.Size([64, 200])
kc_guess: torch.Size([64, 200])
kc_slipping: torch.Size([64, 200])
kc_guess: torch.Size([64, 200])
kc_slipping: torch.Size([64, 200])
kc_guess: torch.Size([64, 200])
kc_slipping: torch.Size([64, 200])
kc_guess: torch.Size([64, 200])
kc_slipping: torch.Size([64, 200])
kc_guess: torch.Size([64, 200])
kc_slipping: torch.Size([64, 200])
kc_guess: torch.Size([64, 200])
kc_slipping: torch.Size([64, 200])
kc_guess: torch.Size([64, 200])
kc_slipping: torch.Size([64, 200])
kc_guess: torch.Size([64, 200])
kc_slipping: torch.Size([64, 200])
kc_guess: torch.Size([64, 200])
kc_slipping: torch.Size([64, 200])
kc_guess: torch.Size([64, 200])
kc_slipping: torch.Size([64, 200])
kc_guess: torch.Size([64, 200])
kc_slipping: torch.Size([64, 200])
kc_guess: torch.Size([64, 200])
kc_slipping: torch.Size([64, 200])
kc_guess: torch.Size([64, 200])
kc_slipping: torch.Size([64, 200])
kc_guess: torch.Size([64, 200])
kc_slipping: torch.Size([64, 200])
kc_guess: torch.Size([64, 200])
kc_slipping: torch.Size([64, 200])
kc_guess: torch.Size([64, 200])
kc_slipping: torch.Size([64, 200])
kc_guess: torch.Size([64, 200])
kc_slipping: torch.Size([64, 200])
kc_guess: torch.Size([64, 200])
kc_slipping: torch.Size([64, 200])
kc_guess: torch.Size([64, 200])
kc_slipping: torch.Size([64, 200])
kc_guess: torch.Size([64, 200])
kc_slipping: torch.Size([64, 200])
kc_guess: torch.Size([64, 200])
kc_slipping: torch.Size([64, 200])
kc_guess: torch.Size([64, 200])
kc_slipping: torch.Size([64, 200])
kc_guess: torch.Size([64, 200])
kc_slipping: torch.Size([64, 200])
kc_guess: torch.Size([64, 200])
kc_slipping: torch.Size([64, 200])
kc_guess: torch.Size([64, 200])
kc_slipping: torch.Size([64, 200])
kc_guess: torch.Size([64, 200])
kc_slipping: torch.Size([64, 200])
kc_guess: torch.Size([64, 200])
kc_slipping: torch.Size([64, 200])
kc_guess: torch.Size([64, 200])
kc_slipping: torch.Size([64, 200])
kc_guess: torch.Size([64, 200])
kc_slipping: torch.Size([64, 200])
kc_guess: torch.Size([64, 200])
kc_slipping: torch.Size([64, 200])
kc_guess: torch.Size([64, 200])
kc_slipping: torch.Size([64, 200])
kc_guess: torch.Size([64, 200])
kc_slipping: torch.Size([64, 200])
kc_guess: torch.Size([64, 200])
kc_slipping: torch.Size([64, 200])
kc_guess: torch.Size([64, 200])
kc_slipping: torch.Size([64, 200])
kc_guess: torch.Size([64, 200])
kc_slipping: torch.Size([64, 200])
kc_guess: torch.Size([64, 200])
kc_slipping: torch.Size([64, 200])
kc_guess: torch.Size([64, 200])
kc_slipping: torch.Size([64, 200])
kc_guess: torch.Size([64, 200])
kc_slipping: torch.Size([64, 200])
kc_guess: torch.Size([64, 200])
kc_slipping: torch.Size([64, 200])
kc_guess: torch.Size([64, 200])
kc_slipping: torch.Size([64, 200])
kc_guess: torch.Size([64, 200])
kc_slipping: torch.Size([64, 200])
kc_guess: torch.Size([64, 200])
kc_slipping: torch.Size([64, 200])
kc_guess: torch.Size([64, 200])
kc_slipping: torch.Size([64, 200])
kc_guess: torch.Size([64, 200])
kc_slipping: torch.Size([64, 200])
kc_guess: torch.Size([64, 200])
kc_slipping: torch.Size([64, 200])
kc_guess: torch.Size([64, 200])
kc_slipping: torch.Size([64, 200])
kc_guess: torch.Size([64, 200])
kc_slipping: torch.Size([64, 200])
kc_guess: torch.Size([64, 200])
kc_slipping: torch.Size([64, 200])
kc_guess: torch.Size([64, 200])
kc_slipping: torch.Size([64, 200])
kc_guess: torch.Size([64, 200])
kc_slipping: torch.Size([64, 200])
kc_guess: torch.Size([64, 200])
kc_slipping: torch.Size([64, 200])
kc_guess: torch.Size([64, 200])
kc_slipping: torch.Size([64, 200])
kc_guess: torch.Size([64, 200])
kc_slipping: torch.Size([64, 200])
kc_guess: torch.Size([64, 200])
kc_slipping: torch.Size([64, 200])
kc_guess: torch.Size([64, 200])
kc_slipping: torch.Size([64, 200])
kc_guess: torch.Size([64, 200])
kc_slipping: torch.Size([64, 200])
kc_guess: torch.Size([64, 200])
kc_slipping: torch.Size([64, 200])
kc_guess: torch.Size([64, 200])
kc_slipping: torch.Size([64, 200])
kc_guess: torch.Size([64, 200])
kc_slipping: torch.Size([64, 200])
kc_guess: torch.Size([64, 200])
kc_slipping: torch.Size([64, 200])
kc_guess: torch.Size([64, 200])
kc_slipping: torch.Size([64, 200])
kc_guess: torch.Size([64, 200])
kc_slipping: torch.Size([64, 200])
kc_guess: torch.Size([64, 200])
kc_slipping: torch.Size([64, 200])
kc_guess: torch.Size([64, 200])
kc_slipping: torch.Size([64, 200])
kc_guess: torch.Size([64, 200])
kc_slipping: torch.Size([64, 200])
kc_guess: torch.Size([64, 200])
kc_slipping: torch.Size([64, 200])
kc_guess: torch.Size([64, 200])
kc_slipping: torch.Size([64, 200])
kc_guess: torch.Size([64, 200])
kc_slipping: torch.Size([64, 200])
kc_guess: torch.Size([64, 200])
kc_slipping: torch.Size([64, 200])
kc_guess: torch.Size([64, 200])
kc_slipping: torch.Size([64, 200])
kc_guess: torch.Size([64, 200])
kc_slipping: torch.Size([64, 200])
kc_guess: torch.Size([64, 200])
kc_slipping: torch.Size([64, 200])
kc_guess: torch.Size([64, 200])
kc_slipping: torch.Size([64, 200])
kc_guess: torch.Size([64, 200])
kc_slipping: torch.Size([64, 200])
kc_guess: torch.Size([64, 200])
kc_slipping: torch.Size([64, 200])
kc_guess: torch.Size([64, 200])
kc_slipping: torch.Size([64, 200])
kc_guess: torch.Size([64, 200])
kc_slipping: torch.Size([64, 200])
kc_guess: torch.Size([64, 200])
kc_slipping: torch.Size([64, 200])
kc_guess: torch.Size([64, 200])
kc_slipping: torch.Size([64, 200])
kc_guess: torch.Size([64, 200])
kc_slipping: torch.Size([64, 200])
kc_guess: torch.Size([64, 200])
kc_slipping: torch.Size([64, 200])
kc_guess: torch.Size([64, 200])
kc_slipping: torch.Size([64, 200])
kc_guess: torch.Size([64, 200])
kc_slipping: torch.Size([64, 200])
kc_guess: torch.Size([64, 200])
kc_slipping: torch.Size([64, 200])
kc_guess: torch.Size([64, 200])
kc_slipping: torch.Size([64, 200])
kc_guess: torch.Size([64, 200])
kc_slipping: torch.Size([64, 200])
kc_guess: torch.Size([64, 200])
kc_slipping: torch.Size([64, 200])
kc_guess: torch.Size([64, 200])
kc_slipping: torch.Size([64, 200])
kc_guess: torch.Size([64, 200])
kc_slipping: torch.Size([64, 200])
kc_guess: torch.Size([64, 200])
kc_slipping: torch.Size([64, 200])
kc_guess: torch.Size([64, 200])
kc_slipping: torch.Size([64, 200])
kc_guess: torch.Size([64, 200])
kc_slipping: torch.Size([64, 200])
kc_guess: torch.Size([64, 200])
kc_slipping: torch.Size([64, 200])
kc_guess: torch.Size([64, 200])
kc_slipping: torch.Size([64, 200])
kc_guess: torch.Size([64, 200])
kc_slipping: torch.Size([64, 200])
kc_guess: torch.Size([64, 200])
kc_slipping: torch.Size([64, 200])
kc_guess: torch.Size([64, 200])
kc_slipping: torch.Size([64, 200])
kc_guess: torch.Size([64, 200])
kc_slipping: torch.Size([64, 200])
kc_guess: torch.Size([64, 200])
kc_slipping: torch.Size([64, 200])
kc_guess: torch.Size([64, 200])
kc_slipping: torch.Size([64, 200])
kc_guess: torch.Size([64, 200])
kc_slipping: torch.Size([64, 200])
kc_guess: torch.Size([64, 200])
kc_slipping: torch.Size([64, 200])
kc_guess: torch.Size([64, 200])
kc_slipping: torch.Size([64, 200])
kc_guess: torch.Size([64, 200])
kc_slipping: torch.Size([64, 200])
kc_guess: torch.Size([64, 200])
kc_slipping: torch.Size([64, 200])
kc_guess: torch.Size([64, 200])
kc_slipping: torch.Size([64, 200])
kc_guess: torch.Size([64, 200])
kc_slipping: torch.Size([64, 200])
kc_guess: torch.Size([64, 200])
kc_slipping: torch.Size([64, 200])
kc_guess: torch.Size([64, 200])
kc_slipping: torch.Size([64, 200])
kc_guess: torch.Size([64, 200])
kc_slipping: torch.Size([64, 200])
kc_guess: torch.Size([64, 200])
kc_slipping: torch.Size([64, 200])
kc_guess: torch.Size([64, 200])
kc_slipping: torch.Size([64, 200])
kc_guess: torch.Size([64, 200])
kc_slipping: torch.Size([64, 200])
kc_guess: torch.Size([64, 200])
kc_slipping: torch.Size([64, 200])
kc_guess: torch.Size([64, 200])
kc_slipping: torch.Size([64, 200])
kc_guess: torch.Size([64, 200])
kc_slipping: torch.Size([64, 200])
kc_guess: torch.Size([64, 200])
kc_slipping: torch.Size([64, 200])
kc_guess: torch.Size([64, 200])
kc_slipping: torch.Size([64, 200])
kc_guess: torch.Size([64, 200])
kc_slipping: torch.Size([64, 200])
kc_guess: torch.Size([64, 200])
kc_slipping: torch.Size([64, 200])
kc_guess: torch.Size([64, 200])
kc_slipping: torch.Size([64, 200])
kc_guess: torch.Size([64, 200])
kc_slipping: torch.Size([64, 200])
kc_guess: torch.Size([64, 200])
kc_slipping: torch.Size([64, 200])
kc_guess: torch.Size([64, 200])
kc_slipping: torch.Size([64, 200])
kc_guess: torch.Size([64, 200])
kc_slipping: torch.Size([64, 200])
kc_guess: torch.Size([64, 200])
kc_slipping: torch.Size([64, 200])
kc_guess: torch.Size([64, 200])
kc_slipping: torch.Size([64, 200])
kc_guess: torch.Size([64, 200])
kc_slipping: torch.Size([64, 200])
kc_guess: torch.Size([64, 200])
kc_slipping: torch.Size([64, 200])
kc_guess: torch.Size([64, 200])
kc_slipping: torch.Size([64, 200])
kc_guess: torch.Size([64, 200])
kc_slipping: torch.Size([64, 200])
kc_guess: torch.Size([64, 200])
kc_slipping: torch.Size([64, 200])
kc_guess: torch.Size([64, 200])
kc_slipping: torch.Size([64, 200])
kc_guess: torch.Size([64, 200])
kc_slipping: torch.Size([64, 200])
kc_guess: torch.Size([64, 200])
kc_slipping: torch.Size([64, 200])
kc_guess: torch.Size([64, 200])
kc_slipping: torch.Size([64, 200])
kc_guess: torch.Size([64, 200])
kc_slipping: torch.Size([64, 200])
kc_guess: torch.Size([64, 200])
kc_slipping: torch.Size([64, 200])
kc_guess: torch.Size([64, 200])
kc_slipping: torch.Size([64, 200])
kc_guess: torch.Size([64, 200])
kc_slipping: torch.Size([64, 200])
kc_guess: torch.Size([64, 200])
kc_slipping: torch.Size([64, 200])
kc_guess: torch.Size([64, 200])
kc_slipping: torch.Size([64, 200])
kc_guess: torch.Size([64, 200])
kc_slipping: torch.Size([64, 200])
kc_guess: torch.Size([64, 200])
kc_slipping: torch.Size([64, 200])
kc_guess: torch.Size([64, 200])
kc_slipping: torch.Size([64, 200])
kc_guess: torch.Size([64, 200])
kc_slipping: torch.Size([64, 200])
kc_guess: torch.Size([64, 200])
kc_slipping: torch.Size([64, 200])
kc_guess: torch.Size([64, 200])
kc_slipping: torch.Size([64, 200])
kc_guess: torch.Size([64, 200])
kc_slipping: torch.Size([64, 200])
kc_guess: torch.Size([64, 200])
kc_slipping: torch.Size([64, 200])
kc_guess: torch.Size([64, 200])
kc_slipping: torch.Size([64, 200])
kc_guess: torch.Size([64, 200])
kc_slipping: torch.Size([64, 200])
kc_guess: torch.Size([64, 200])
kc_slipping: torch.Size([64, 200])
kc_guess: torch.Size([64, 200])
kc_slipping: torch.Size([64, 200])
kc_guess: torch.Size([64, 200])
kc_slipping: torch.Size([64, 200])
kc_guess: torch.Size([64, 200])
kc_slipping: torch.Size([64, 200])
kc_guess: torch.Size([64, 200])
kc_slipping: torch.Size([64, 200])
kc_guess: torch.Size([64, 200])
kc_slipping: torch.Size([64, 200])
kc_guess: torch.Size([64, 200])
kc_slipping: torch.Size([64, 200])
kc_guess: torch.Size([64, 200])
kc_slipping: torch.Size([64, 200])
kc_guess: torch.Size([64, 200])
kc_slipping: torch.Size([64, 200])
kc_guess: torch.Size([64, 200])
kc_slipping: torch.Size([64, 200])
kc_guess: torch.Size([64, 200])
kc_slipping: torch.Size([64, 200])
kc_guess: torch.Size([64, 200])
kc_slipping: torch.Size([64, 200])
kc_guess: torch.Size([64, 200])
kc_slipping: torch.Size([64, 200])
kc_guess: torch.Size([64, 200])
kc_slipping: torch.Size([64, 200])
kc_guess: torch.Size([64, 200])
kc_slipping: torch.Size([64, 200])
kc_guess: torch.Size([64, 200])
kc_slipping: torch.Size([64, 200])
kc_guess: torch.Size([64, 200])
kc_slipping: torch.Size([64, 200])
kc_guess: torch.Size([64, 200])
kc_slipping: torch.Size([64, 200])
kc_guess: torch.Size([64, 200])
kc_slipping: torch.Size([64, 200])
kc_guess: torch.Size([64, 200])
kc_slipping: torch.Size([64, 200])
kc_guess: torch.Size([64, 200])
kc_slipping: torch.Size([64, 200])
kc_guess: torch.Size([64, 200])
kc_slipping: torch.Size([64, 200])
kc_guess: torch.Size([64, 200])
kc_slipping: torch.Size([64, 200])
kc_guess: torch.Size([64, 200])
kc_slipping: torch.Size([64, 200])
kc_guess: torch.Size([64, 200])
kc_slipping: torch.Size([64, 200])
kc_guess: torch.Size([64, 200])
kc_slipping: torch.Size([64, 200])
kc_guess: torch.Size([64, 200])
kc_slipping: torch.Size([64, 200])
kc_guess: torch.Size([64, 200])
kc_slipping: torch.Size([64, 200])
kc_guess: torch.Size([64, 200])
kc_slipping: torch.Size([64, 200])
kc_guess: torch.Size([64, 200])
kc_slipping: torch.Size([10, 200])
kc_guess: torch.Size([10, 200])
ts.shape: (62040,), ps.shape: (62040,)
testauc: 0.826160322778045, testacc: 0.7726479710519514, window_testauc: 0.8225717145851528, window_testacc: 0.7700999355254674
testauc: 0.826160322778045, testacc: 0.7726479710519514, window_testauc: 0.8225717145851528, window_testacc: 0.7700999355254674
question_testauc: -1, question_testacc: -1, question_window_testauc: -1, question_window_testacc: -1
wandb: Waiting for W&B process to finish, PID 5190... (success).
wandb: - 0.00MB of 0.00MB uploaded (0.00MB deduped)wandb: \ 0.00MB of 0.00MB uploaded (0.00MB deduped)wandb: | 0.00MB of 0.00MB uploaded (0.00MB deduped)wandb: / 0.00MB of 0.03MB uploaded (0.00MB deduped)wandb: - 0.00MB of 0.03MB uploaded (0.00MB deduped)wandb: \ 0.00MB of 0.03MB uploaded (0.00MB deduped)wandb: | 0.00MB of 0.03MB uploaded (0.00MB deduped)wandb: / 0.00MB of 0.03MB uploaded (0.00MB deduped)wandb: - 0.00MB of 0.03MB uploaded (0.00MB deduped)wandb: \ 0.03MB of 0.03MB uploaded (0.00MB deduped)wandb: | 0.03MB of 0.03MB uploaded (0.00MB deduped)wandb: / 0.03MB of 0.03MB uploaded (0.00MB deduped)wandb: - 0.03MB of 0.03MB uploaded (0.00MB deduped)wandb: \ 0.03MB of 0.03MB uploaded (0.00MB deduped)wandb: | 0.03MB of 0.03MB uploaded (0.00MB deduped)wandb: / 0.03MB of 0.03MB uploaded (0.00MB deduped)wandb: - 0.03MB of 0.03MB uploaded (0.00MB deduped)wandb:                                                                                
/root/anaconda3/envs/hsy_env/lib/python3.6/site-packages/tensorflow/python/framework/dtypes.py:526: FutureWarning: Passing (type, 1) or '1type' as a synonym of type is deprecated; in a future version of numpy, it will be understood as (type, (1,)) / '(1,)type'.
  _np_qint8 = np.dtype([("qint8", np.int8, 1)])
/root/anaconda3/envs/hsy_env/lib/python3.6/site-packages/tensorflow/python/framework/dtypes.py:527: FutureWarning: Passing (type, 1) or '1type' as a synonym of type is deprecated; in a future version of numpy, it will be understood as (type, (1,)) / '(1,)type'.
  _np_quint8 = np.dtype([("quint8", np.uint8, 1)])
/root/anaconda3/envs/hsy_env/lib/python3.6/site-packages/tensorflow/python/framework/dtypes.py:528: FutureWarning: Passing (type, 1) or '1type' as a synonym of type is deprecated; in a future version of numpy, it will be understood as (type, (1,)) / '(1,)type'.
  _np_qint16 = np.dtype([("qint16", np.int16, 1)])
/root/anaconda3/envs/hsy_env/lib/python3.6/site-packages/tensorflow/python/framework/dtypes.py:529: FutureWarning: Passing (type, 1) or '1type' as a synonym of type is deprecated; in a future version of numpy, it will be understood as (type, (1,)) / '(1,)type'.
  _np_quint16 = np.dtype([("quint16", np.uint16, 1)])
/root/anaconda3/envs/hsy_env/lib/python3.6/site-packages/tensorflow/python/framework/dtypes.py:530: FutureWarning: Passing (type, 1) or '1type' as a synonym of type is deprecated; in a future version of numpy, it will be understood as (type, (1,)) / '(1,)type'.
  _np_qint32 = np.dtype([("qint32", np.int32, 1)])
/root/anaconda3/envs/hsy_env/lib/python3.6/site-packages/tensorflow/python/framework/dtypes.py:535: FutureWarning: Passing (type, 1) or '1type' as a synonym of type is deprecated; in a future version of numpy, it will be understood as (type, (1,)) / '(1,)type'.
  np_resource = np.dtype([("resource", np.ubyte, 1)])
/root/anaconda3/envs/hsy_env/lib/python3.6/site-packages/tensorboard/compat/tensorflow_stub/dtypes.py:541: FutureWarning: Passing (type, 1) or '1type' as a synonym of type is deprecated; in a future version of numpy, it will be understood as (type, (1,)) / '(1,)type'.
  _np_qint8 = np.dtype([("qint8", np.int8, 1)])
/root/anaconda3/envs/hsy_env/lib/python3.6/site-packages/tensorboard/compat/tensorflow_stub/dtypes.py:542: FutureWarning: Passing (type, 1) or '1type' as a synonym of type is deprecated; in a future version of numpy, it will be understood as (type, (1,)) / '(1,)type'.
  _np_quint8 = np.dtype([("quint8", np.uint8, 1)])
/root/anaconda3/envs/hsy_env/lib/python3.6/site-packages/tensorboard/compat/tensorflow_stub/dtypes.py:543: FutureWarning: Passing (type, 1) or '1type' as a synonym of type is deprecated; in a future version of numpy, it will be understood as (type, (1,)) / '(1,)type'.
  _np_qint16 = np.dtype([("qint16", np.int16, 1)])
/root/anaconda3/envs/hsy_env/lib/python3.6/site-packages/tensorboard/compat/tensorflow_stub/dtypes.py:544: FutureWarning: Passing (type, 1) or '1type' as a synonym of type is deprecated; in a future version of numpy, it will be understood as (type, (1,)) / '(1,)type'.
  _np_quint16 = np.dtype([("quint16", np.uint16, 1)])
/root/anaconda3/envs/hsy_env/lib/python3.6/site-packages/tensorboard/compat/tensorflow_stub/dtypes.py:545: FutureWarning: Passing (type, 1) or '1type' as a synonym of type is deprecated; in a future version of numpy, it will be understood as (type, (1,)) / '(1,)type'.
  _np_qint32 = np.dtype([("qint32", np.int32, 1)])
/root/anaconda3/envs/hsy_env/lib/python3.6/site-packages/tensorboard/compat/tensorflow_stub/dtypes.py:550: FutureWarning: Passing (type, 1) or '1type' as a synonym of type is deprecated; in a future version of numpy, it will be understood as (type, (1,)) / '(1,)type'.
  np_resource = np.dtype([("resource", np.ubyte, 1)])
wandb: Run history:
wandb:             add_uuid ‚ñÅ
wandb:                 d_ff ‚ñÅ
wandb:              d_model ‚ñÅ
wandb:              dropout ‚ñÅ
wandb:         final_fc_dim ‚ñÅ
wandb:                 fold ‚ñÅ
wandb:             lambda_r ‚ñÅ
wandb:        learning_rate ‚ñÅ
wandb:             n_blocks ‚ñÅ
wandb:       num_attn_heads ‚ñÅ
wandb:       oriaccconcepts ‚ñÅ
wandb:       oriacclate_all ‚ñÅ
wandb:      oriacclate_mean ‚ñÅ
wandb:      oriacclate_vote ‚ñÅ
wandb:       oriaucconcepts ‚ñÅ
wandb:       oriauclate_all ‚ñÅ
wandb:      oriauclate_mean ‚ñÅ
wandb:      oriauclate_vote ‚ñÅ
wandb:                 seed ‚ñÅ
wandb:             sigmoida ‚ñÅ
wandb:             sigmoidb ‚ñÅ
wandb:              testacc ‚ñÅ
wandb:              testauc ‚ñÅ
wandb:            use_wandb ‚ñÅ
wandb:       window_testacc ‚ñÅ
wandb:       window_testauc ‚ñÅ
wandb:    windowaccconcepts ‚ñÅ
wandb:    windowacclate_all ‚ñÅ
wandb:   windowacclate_mean ‚ñÅ
wandb:   windowacclate_vote ‚ñÅ
wandb:    windowaucconcepts ‚ñÅ
wandb:    windowauclate_all ‚ñÅ
wandb:   windowauclate_mean ‚ñÅ
wandb:   windowauclate_vote ‚ñÅ
wandb: 
wandb: Run summary:
wandb:             add_uuid 0
wandb:                 d_ff 256
wandb:              d_model 512
wandb:         dataset_name assist2009
wandb:              dropout 0.2
wandb:             emb_type dina
wandb:         final_fc_dim 256
wandb:                 fold 0
wandb:             lambda_r 0.5
wandb:        learning_rate 0.0001
wandb:           model_name deepbkt
wandb:             n_blocks 4
wandb:       num_attn_heads 8
wandb:       oriaccconcepts 0.69557
wandb:       oriacclate_all 0.69868
wandb:      oriacclate_mean 0.70031
wandb:      oriacclate_vote 0.69895
wandb:       oriaucconcepts 0.74689
wandb:       oriauclate_all 0.76216
wandb:      oriauclate_mean 0.76501
wandb:      oriauclate_vote 0.76714
wandb:             save_dir saved_model
wandb:                 seed 3407
wandb:             sigmoida 0.05
wandb:             sigmoidb 0.2
wandb:              testacc 0.77265
wandb:              testauc 0.82616
wandb:            use_wandb 0
wandb:       window_testacc 0.7701
wandb:       window_testauc 0.82257
wandb:    windowaccconcepts 0.6946
wandb:    windowacclate_all 0.69779
wandb:   windowacclate_mean 0.699
wandb:   windowacclate_vote 0.69785
wandb:    windowaucconcepts 0.7449
wandb:    windowauclate_all 0.76064
wandb:   windowauclate_mean 0.76332
wandb:   windowauclate_vote 0.76519
wandb: 
wandb: Synced 6 W&B file(s), 0 media file(s), 0 artifact file(s) and 0 other file(s)
wandb: Synced lyric-elevator-272: https://wandb.ai/shyann/wandb_predict/runs/xzxd6ndi
wandb: Find logs at: ./wandb/run-20220908_173250-xzxd6ndi/logs/debug.log
wandb: 

